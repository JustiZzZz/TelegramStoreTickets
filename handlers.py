import re
from aiogram import F, Router, Bot
from aiogram.filters import CommandStart, StateFilter
import keyboards as kb
from aiogram.types import Message, CallbackQuery, InputMediaPhoto, InputMediaAudio
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from files.config import (
    ADMIN_ID, MEDIA_MATH, VOICE_MATH, SUCCESS_PAYMENT_MESSAGE, VOICE_PHYSICS, MEDIA_PHYSICS
)

router = Router()

class AskQuestion(StatesGroup):
    waiting_for_question = State()

class Payment(StatesGroup):
    waiting_for_check = State()
    tariff_type = State()

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        text=(
            "<b>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ <u>¬´–ì–∞–π–¥—ã –ø–æ –±–∏–ª–µ—Ç–∞–º¬ª</u></b> üéì\n\n"
            "–≠—Ç–æ—Ç –±–æ—Ç ‚Äì –≤–∞—à –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É Telegram-–∫–∞–Ω–∞–ª—É, –≥–¥–µ —Å–æ–±—Ä–∞–Ω—ã –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–∞–∑–±–æ—Ä—ã –≤—Å–µ—Ö —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤ –ø–æ <b>—É—Å—Ç–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ —Ñ–∏–∑–∏–∫–µ</b> \n\n"
            "<b>–û –Ω–∞—Å:</b>\n"
            "–ù–∞—Å –∑–æ–≤—É—Ç –¢–∞–Ω—è –∏ –ö–∏—Ä–∏–ª–ª. –ú—ã —Å–∞–º–∏ –Ω–µ–¥–∞–≤–Ω–æ –±—ã–ª–∏ –Ω–∞ –≤–∞—à–µ–º –º–µ—Å—Ç–µ, —É—Å–ø–µ—à–Ω–æ —Å–¥–∞–ª–∏ —ç—Ç–∏ —ç–∫–∑–∞–º–µ–Ω—ã –∏ –ø–æ—Å—Ç—É–ø–∏–ª–∏. "
            "–ú—ã —Å–æ–∑–¥–∞–ª–∏ —ç—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —á—Ç–æ–±—ã —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–Ω–∞–Ω–∏—è –∏ –ø–æ–º–æ—á—å –≤–∞–º –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è <b>—É–≤–µ—Ä–µ–Ω–Ω–æ –∏ –±–µ–∑ —Å—Ç—Ä–µ—Å—Å–∞</b>, "
            "–æ–ø–∏—Ä–∞—è—Å—å –Ω–∞ —Å–≤–µ–∂–∏–π –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –æ–ø—ã—Ç ‚òùÔ∏è\n\n"
            "<b>–ß—Ç–æ –≤—ã –Ω–∞–π–¥–µ—Ç–µ –≤ –∑–∞–∫—Ä—ã—Ç–æ–º –∫–∞–Ω–∞–ª–µ:</b>\n"
            "üîπ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∫—Ä–∞—Å–∏–≤–æ –∏ –ø–æ–Ω—è—Ç–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Å–ø–µ–∫—Ç–æ–≤ –ø–æ –∫–∞–∂–¥–æ–º—É –±–∏–ª–µ—Ç—É\n"
            "üîπ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∞—É–¥–∏–æ–≤–µ—Ä—Å–∏–∏ —Ä–∞–∑–±–æ—Ä–æ–≤ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è\n"
            "üîπ –£–¥–æ–±–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ —Ç–µ–º–∞–º –∏ –Ω–æ–º–µ—Ä–∞–º –±–∏–ª–µ—Ç–æ–≤\n\n"
            "–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ, –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∏–ª–∏ —Å—Ä–∞–∑—É –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø ‚¨áÔ∏è"
        ),
        reply_markup=kb.main_menu,
        parse_mode="HTML"
    )

@router.callback_query(F.data == 'how_it_works')
async def how_it_works(callback: CallbackQuery):
    await callback.message.answer(
        text=(
            "<b>‚öôÔ∏è –í—Å–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–æ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ. –í–æ—Ç –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n\n"
            "1Ô∏è‚É£ <b>–í—ã–±–∏—Ä–∞–µ—Ç–µ —Ç–∞—Ä–∏—Ñ</b>, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç –∏–º–µ–Ω–Ω–æ –≤–∞–º\n\n"
            "2Ô∏è‚É£ <b>–û–ø–ª–∞—á–∏–≤–∞–µ—Ç–µ –¥–æ—Å—Ç—É–ø</b> –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º. –ù–∞—à–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ (—Å–∞–º–æ–∑–∞–Ω—è—Ç–æ—Å—Ç—å), —á—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –≥–∞—Ä–∞–Ω—Ç–∏–µ–π —á–µ—Å—Ç–Ω–æ—Å—Ç–∏\n\n"
            "3Ô∏è‚É£ <b>–ü—Ä–∏—Å—ã–ª–∞–µ—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞</b> –≤ —ç—Ç–æ—Ç –±–æ—Ç\n\n"
            "4Ô∏è‚É£ <b>–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞!</b> –ú—ã –ª–∏—á–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—Ç—É –∏ –≤—ã—Å—ã–ª–∞–µ–º –≤–∞–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª —Å –±–µ—Å—Å—Ä–æ—á–Ω—ã–º –¥–æ—Å—Ç—É–ø–æ–º"
        ),
        reply_markup=kb.back_menu
    )
    await callback.answer()

@router.callback_query(F.data == 'ask_question')
async def ask_question(callback: CallbackQuery, state: FSMContext):
    await state.set_state(AskQuestion.waiting_for_question)
    await callback.message.answer(
        "–ú—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç–∏–º –Ω–∞ –ª—é–±–æ–π –≤–∞—à –≤–æ–ø—Ä–æ—Å. –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º")
    await callback.answer()

@router.message(AskQuestion.waiting_for_question)
async def process_question(message: Message, state: FSMContext, bot: Bot):
    user_info = f"–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.from_user.username} (ID: `{message.from_user.id}`)"
    await bot.send_message(
        ADMIN_ID,
        f"‚ùì <b>–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å!</b>\n\n{user_info}\n\n<b>–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞:</b>\n¬´{message.text}¬ª\n\n"
        "–ß—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é ¬´–û—Ç–≤–µ—Ç–∏—Ç—å¬ª (Reply) –Ω–∞ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Å–≤–∞–π–ø–Ω–∏ –≤–ª–µ–≤–æ)"
    )
    await message.answer(
        "–°–ø–∞—Å–∏–±–æ! –í–∞—à –≤–æ–ø—Ä–æ—Å –ø–æ–ª—É—á–µ–Ω. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤–∞–º –≤ —ç—Ç–æ—Ç —á–∞—Ç, –∫–∞–∫ —Ç–æ–ª—å–∫–æ —Å–º–æ–∂–µ–º",
        reply_markup=kb.back_menu,
    )
    await state.clear()

@router.message(F.from_user.id == ADMIN_ID, F.reply_to_message, ~F.text.startswith('https://t.me/+'))
async def admin_reply_to_question(message: Message, bot: Bot):
    if "–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞:" in message.reply_to_message.text:
        match = re.search(r"\(ID: `(\d+)`\)", message.reply_to_message.text)
        if match:
            user_id = int(match.group(1))
            await bot.send_message(user_id, f"‚úâÔ∏è <b>–í–∞–º –ø—Ä–∏—à–µ–ª –æ—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:</b>\n¬´{message.text}¬ª")
            await message.answer("‚úÖ –û—Ç–≤–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    else:
        await message.answer(
            "–ß—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —á–µ–∫–æ–º <b>—Å—Å—ã–ª–∫–æ–π-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ–º</b>, –∞ –Ω–µ —Ç–µ–∫—Å—Ç–æ–º")

@router.message(F.from_user.id == ADMIN_ID, F.reply_to_message, F.text.startswith('https://t.me/+'))
async def admin_approve_with_link(message: Message, bot: Bot):
    if message.reply_to_message.caption:
        match = re.search(r"\(ID: `(\d+)`\)", message.reply_to_message.caption)
        if match:
            user_id = int(match.group(1))
            invite_link = message.text
            await bot.send_message(chat_id=user_id, text=SUCCESS_PAYMENT_MESSAGE.format(link=invite_link))
            await message.reply_to_message.edit_caption(
                caption=f"{message.reply_to_message.caption}\n\n‚úÖ <b>–û–ü–õ–ê–¢–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê</b>\n–°—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é",
                reply_markup=None
            )
            await message.answer("‚úÖ –°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")

@router.callback_query(F.data == 'choice_buy')
async def choice_buy(callback: CallbackQuery):
    await callback.message.edit_text(
        text=(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–º —Ç–∞—Ä–∏—Ñ:\n\n"
            "‚ö°Ô∏è <b><u>–¢–∞—Ä–∏—Ñ ¬´–ì–∞–π–¥ | –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞¬ª</u></b>\n"
            "<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b> –ø–æ–ª–Ω—ã–π —Ä–∞–∑–±–æ—Ä –≤—Å–µ—Ö <b>100 –±–∏–ª–µ—Ç–æ–≤</b>\n\n"
            "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å: <u>29 BYN</u></b>\n\n"
            "<i>–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤, –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –ø–æ —Ü–µ–ª–µ–≤–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏ —Å–¥–∞—é—â–∏—Ö —É—Å—Ç–Ω—ã–π —ç–∫–∑–∞–º–µ–Ω –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ</i>\n\n"
            "üöÄ <b><u>–¢–∞—Ä–∏—Ñ ¬´–ì–∞–π–¥ | –§–∏–∑–∏–∫–∞¬ª</u></b>\n"
            "<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b> –ø–æ–ª–Ω—ã–π —Ä–∞–∑–±–æ—Ä –≤—Å–µ—Ö <b>94 –±–∏–ª–µ—Ç–æ–≤</b>\n\n"
            "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å: <u>29 BYN</u></b>\n\n"
            "<i>–ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤, –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –ø–æ —Ü–µ–ª–µ–≤–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é –∏ —Å–¥–∞—é—â–∏—Ö —É—Å—Ç–Ω—ã–π —ç–∫–∑–∞–º–µ–Ω –ø–æ —Ñ–∏–∑–∏–∫–µ</i>\n\n"
            "üíé <b><u>–¢–∞—Ä–∏—Ñ ¬´–ì–∞–π–¥ | –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ + –§–∏–∑–∏–∫–∞¬ª</u></b>\n"
            "<b>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b> –≤—Å–µ <b>100 –±–∏–ª–µ—Ç–æ–≤</b> –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ <b>94 –±–∏–ª–µ—Ç–∞</b> –ø–æ —Ñ–∏–∑–∏–∫–µ\n\n"
            "<b>–°—Ç–æ–∏–º–æ—Å—Ç—å: <u>45 BYN</u></b> (–≤—ã–≥–æ–¥–∞ ‚Äì 13 BYN)\n\n"
            "<i>–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –¥–µ—Ç—Å–∫–æ–≥–æ —Ç–µ—Ö–Ω–æ–ø–∞—Ä–∫–∞ (–ù–î–¢–ü), –ø—Ä–æ—Ö–æ–¥—è—â–∏—Ö —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ –¥–≤—É–º –ø—Ä–µ–¥–º–µ—Ç–∞–º</i>\n\n"
            "–ü–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥ (–∫–Ω–æ–ø–∫–∞ ¬´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ¬ª)"
        ),
        reply_markup=kb.choice_buy,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data.startswith('buy_'))
async def payment_start(callback: CallbackQuery, state: FSMContext):
    tariff_code = callback.data.split('_')[1]
    await state.update_data(tariff_type=tariff_code)

    if tariff_code == 'math':
        price, name, info = 29, "¬´–ì–∞–π–¥ | –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞¬ª", "–∫ –æ–¥–Ω–æ–º—É –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É"
    elif tariff_code == 'physics':
        price, name, info = 29, "¬´–ì–∞–π–¥ | –§–∏–∑–∏–∫–∞¬ª", "–∫ –æ–¥–Ω–æ–º—É –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É"
    else:
        price, name, info = 45, "¬´–ì–∞–π–¥ | –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ + –§–∏–∑–∏–∫–∞¬ª", "–∫ –¥–≤—É–º –∑–∞–∫—Ä—ã—Ç—ã–º –∫–∞–Ω–∞–ª–∞–º"

    await callback.message.edit_text(
        text=(
            f"–û—Ç–ª–∏—á–Ω–æ! –í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ <b>{name}</b>\n\n"
            f"<b>–ö –æ–ø–ª–∞—Ç–µ:</b> {price} –±–µ–ª–æ—Ä—É—Å—Å–∫–∏—Ö —Ä—É–±–ª–µ–π\n"
            f"<b>–î–æ—Å—Ç—É–ø:</b> –±–µ—Å—Å—Ä–æ—á–Ω—ã–π, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è {info}\n\n"
            "<b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –æ–ø–ª–∞—Ç–µ:</b>\n\n"
            "1Ô∏è‚É£ –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º: [–∑–¥–µ—Å—å –±—É–¥—É—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã]\n\n"
            "2Ô∏è‚É£ <b>–í–ê–ñ–ù–û</b> —Å–¥–µ–ª–∞–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ —Ñ–æ—Ç–æ —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ\n\n"
            "3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫\n\n"
            "<i>–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É ¬´–Ø –æ–ø–ª–∞—Ç–∏–ª(–∞)¬ª, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å –∏ —Å–æ–≥–ª–∞—Å–Ω—ã —Å —É—Å–ª–æ–≤–∏—è–º–∏ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è</i>"
        ),
        reply_markup=kb.payment_for_the_product,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == 'payment_guide')
async def payment_guide(callback: CallbackQuery):
    await callback.message.answer(
        '–¢–ï–ö–°–¢ –ü–†–ò–ú–ï–†–ê',
        reply_markup=kb.back_menu_close
    )
    await callback.answer()

@router.callback_query(F.data == 'user_agreement')
async def user_agreement(callback: CallbackQuery):
    await callback.message.answer(
        text=(
            "<b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ</b>\n\n"
            "–í —ç—Ç–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ –∏–∑–ª–æ–∂–µ–Ω—ã —É—Å–ª–æ–≤–∏—è –∏ –ø—Ä–∞–≤–∏–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤, –ø–æ—Ä—è–¥–æ–∫ –æ–ø–ª–∞—Ç—ã, –∞ —Ç–∞–∫–∂–µ –ø—Ä–∞–≤–∞ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ —Å—Ç–æ—Ä–æ–Ω\n\n"
            "–û–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –Ω–∏–º ‚Äì –≤–∞–∂–Ω—ã–π —à–∞–≥ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π. –°–æ–≤–µ—Ä—à–∞—è –æ–ø–ª–∞—Ç—É, –≤—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ —Å–≤–æ–µ –ø–æ–ª–Ω–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ —Å–æ –≤—Å–µ–º–∏ –ø—É–Ω–∫—Ç–∞–º–∏ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è\n\n"
            "–ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç—ã –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ <a href=\"https://graph.org/Publichnaya-oferta-Polzovatelskoe-soglashenie-na-predostavlenie-dostupa-k-informacionnym-materialam-07-26\">—Å—Å—ã–ª–∫–µ</a>"
        ),
        reply_markup=kb.user_agreement_next_stage,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == 'short_agreement')
async def short_agreement(callback: CallbackQuery):
    await callback.message.answer(
        text=(
            "–ö–æ–Ω–µ—á–Ω–æ! –í–æ—Ç –≤—ã–∂–∏–º–∫–∞ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –∏–∑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è, —á—Ç–æ–±—ã –≤—ã —á–µ—Ç–∫–æ –ø–æ–Ω–∏–º–∞–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —É—Å–ª–æ–≤–∏—è. –≠—Ç–æ –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –ø–æ–ª–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞, –Ω–æ –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ —Å–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è\n\n"
            "<b>–ö—Ä–∞—Ç–∫–æ –æ –≥–ª–∞–≤–Ω–æ–º –∏–∑ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è:</b>\n\n"
            "<b>1. –ß—Ç–æ –≤—ã –ø–æ–∫—É–ø–∞–µ—Ç–µ?</b>\n\n"
            "–í—ã –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç–µ –ª–∏—á–Ω—ã–π, –±–µ—Å—Å—Ä–æ—á–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É Telegram-–∫–∞–Ω–∞–ª—É (–∏–ª–∏ –∫–∞–Ω–∞–ª–∞–º) –¥–ª—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è. –í—ã –Ω–µ –ø–æ–∫—É–ø–∞–µ—Ç–µ —Å–∞–º–∏ —Ñ–∞–π–ª—ã, –∞ –ø—Ä–∞–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–∞–∑–æ–π –∑–Ω–∞–Ω–∏–π\n\n"
            "<b>2. –ß—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—á–µ—Å–∫–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–æ? <u>(–°–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ!)</u></b>\n\n"
            "–í—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã —è–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ—Ä—Å–∫–æ–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å—é. –ü–æ—ç—Ç–æ–º—É <b>—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è</b>: –¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã, —Å–∫–∞–Ω—ã, –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã. –î–µ–ª–∏—Ç—å—Å—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏ –∏–ª–∏ –¥–æ—Å—Ç—É–ø–æ–º —Å –∫–µ–º-–ª–∏–±–æ –µ—â–µ (–¥—Ä—É–∑—å—è–º–∏, –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞–º–∏). –ü–µ—Ä–µ–ø—Ä–æ–¥–∞–≤–∞—Ç—å –∏–ª–∏ –ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≥–∞–π–¥—ã –≤ –æ—Ç–∫—Ä—ã—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ. –ü–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∫–æ–º—É-–ª–∏–±–æ –ø–æ–ª—É—á–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ\n\n"
            "‚ùó <b>–ù–∞—Ä—É—à–µ–Ω–∏–µ —ç—Ç–∏—Ö –ø—Ä–∞–≤–∏–ª –≤–µ–¥–µ—Ç –∫ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–π –∏ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ –¥–æ—Å—Ç—É–ø–∞ –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤.</b>\n\n"
            "<b>3. –ú–æ–∂–Ω–æ –ª–∏ –≤–µ—Ä–Ω—É—Ç—å –¥–µ–Ω—å–≥–∏?</b>\n\n"
            "–ü–æ—Å–∫–æ–ª—å–∫—É —É—Å–ª—É–≥–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ü–∏—Ñ—Ä–æ–≤—ã–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º –∏ —Å—á–∏—Ç–∞–µ—Ç—Å—è –æ–∫–∞–∑–∞–Ω–Ω–æ–π –≤ –º–æ–º–µ–Ω—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∞–º —Å—Å—ã–ª–∫–∏, –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω\n\n"
            "<b>4. –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –ª–∏ –≥–∞–π–¥ —Å–¥–∞—á—É —ç–∫–∑–∞–º–µ–Ω–∞?</b>\n\n"
            "–ù–∞—à–∏ –≥–∞–π–¥—ã ‚Äì —ç—Ç–æ –º–æ—â–Ω—ã–π –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏, –Ω–æ –æ–Ω–∏ –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é—Ç —É—Å–ø–µ—à–Ω—É—é —Å–¥–∞—á—É —ç–∫–∑–∞–º–µ–Ω–∞. –í–∞—à –∏—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≤–∏—Å–∏—Ç —Ç–æ–ª—å–∫–æ –æ—Ç –≤–∞—à–µ–≥–æ —É—Å–µ—Ä–¥–∏—è –∏ –ª–∏—á–Ω–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –ú—ã –¥–∞–µ–º —É–¥–æ—á–∫—É ‚Äì –∞ —Ä—ã–±–∞—á–∏—Ç–µ –≤—ã üôÉ\n\n"
            "–≠—Ç–æ –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã. –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç —Å–æ–≥–ª–∞—à–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø—Ä–∏ –æ–ø–ª–∞—Ç–µ, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è <a href=\"https://graph.org/Publichnaya-oferta-Polzovatelskoe-soglashenie-na-predostavlenie-dostupa-k-informacionnym-materialam-07-26\">–∑–¥–µ—Å—å</a>\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –Ω–∏–º –ø–µ—Ä–µ–¥ —Å–æ–≤–µ—Ä—à–µ–Ω–∏–µ–º –ø–æ–∫—É–ø–∫–∏"
        ),
        reply_markup=kb.short_agreement,
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == 'example')
async def example(callback: CallbackQuery):
    await callback.message.edit_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –∫–∞–∫ –≤—ã–≥–ª—è–¥—è—Ç –º–∞—Ç–µ—Ä–∏–∞–ª—ã:',
        reply_markup=kb.example_menu
    )
    await callback.answer()

@router.callback_query(F.data == 'math')
async def math_media(callback: CallbackQuery):
    await callback.message.answer(
        "<b>–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ | –ë–∏–ª–µ—Ç ‚Ññ1</b>\n"
        "<b>–¢–µ–º–∞:</b> –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É–≥–ª–∞. –†–∞–≤–Ω—ã–µ —É–≥–ª—ã. –ë–∏—Å—Å–µ–∫—Ç—Ä–∏—Å–∞ —É–≥–ª–∞. –ì—Ä–∞–¥—É—Å–Ω–∞—è –º–µ—Ä–∞ —É–≥–ª–∞",
        parse_mode="HTML"
    )
    media_group_photo = [InputMediaPhoto(media=file_id) for file_id in MEDIA_MATH]
    await callback.message.answer_media_group(media=media_group_photo)
    media_group_audio = [
        InputMediaAudio(media=file_id, caption="üéôÔ∏è <i>–ü—Ä–∏–º–µ—Ä –∞—É–¥–∏–æ–±–∏–ª–µ—Ç–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ</i>" if i == 0 else None,
                        parse_mode="HTML") for i, file_id in enumerate(VOICE_MATH)]
    await callback.message.answer_media_group(media=media_group_audio)
    await callback.message.answer(
        '–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–∑–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –±–∏–ª–µ—Ç–æ–≤ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ. –í –∑–∞–∫—Ä—ã—Ç–æ–º –∫–∞–Ω–∞–ª–µ –∫–∞–∂–¥—ã–π –±–∏–ª–µ—Ç —Ä–∞–∑–æ–±—Ä–∞–Ω —Ç–∞–∫ –∂–µ –ø–æ–¥—Ä–æ–±–Ω–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´—Ñ–æ—Ç–æ-–∫–æ–Ω—Å–ø–µ–∫—Ç + –∞—É–¥–∏–æ-–≤–µ—Ä—Å–∏—è¬ª',
        reply_markup=kb.back_menu
    )
    await callback.answer()

@router.callback_query(F.data == 'physics')
async def math_media(callback: CallbackQuery):
    await callback.message.answer(
        "<b>–§–∏–∑–∏–∫–∞ | –ë–∏–ª–µ—Ç ‚Ññ1</b>\n"
        "<b>–¢–µ–º–∞:</b> –ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ. –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–æ—è –∏ –¥–≤–∏–∂–µ–Ω–∏—è. –ü–æ—Å—Ç—É–ø–∞—Ç–µ–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ. –°–∏—Å—Ç–µ–º–∞ –æ—Ç—Å—á–µ—Ç–∞. –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è: –ø—É—Ç—å, –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞",
        parse_mode="HTML"
    )
    media_group_photo = [InputMediaPhoto(media=file_id) for file_id in MEDIA_PHYSICS]
    await callback.message.answer_media_group(media=media_group_photo)
    media_group_audio = [
        InputMediaAudio(media=file_id, caption="üéôÔ∏è <i>–ü—Ä–∏–º–µ—Ä –∞—É–¥–∏–æ–±–∏–ª–µ—Ç–∞ –ø–æ —Ñ–∏–∑–∏–∫–µ</i>" if i == 0 else None,
                        parse_mode="HTML") for i, file_id in enumerate(VOICE_PHYSICS)]
    await callback.message.answer_media_group(media=media_group_audio)
    await callback.message.answer(
        '–í–æ—Ç –ø—Ä–∏–º–µ—Ä —Ä–∞–∑–±–æ—Ä–∞ –æ–¥–Ω–æ–≥–æ –∏–∑ –±–∏–ª–µ—Ç–æ–≤ –ø–æ —Ñ–∏–∑–∏–∫–µ. –í –∑–∞–∫—Ä—ã—Ç–æ–º –∫–∞–Ω–∞–ª–µ –∫–∞–∂–¥—ã–π –±–∏–ª–µ—Ç —Ä–∞–∑–æ–±—Ä–∞–Ω —Ç–∞–∫ –∂–µ –ø–æ–¥—Ä–æ–±–Ω–æ, –≤ —Ñ–æ—Ä–º–∞—Ç–µ ¬´—Ñ–æ—Ç–æ-–∫–æ–Ω—Å–ø–µ–∫—Ç + –∞—É–¥–∏–æ-–≤–µ—Ä—Å–∏—è¬ª',
        reply_markup=kb.back_menu
    )
    await callback.answer()

@router.callback_query(F.data == 'back_start')
async def back_to_start(callback: CallbackQuery):
    await callback.message.edit_text(
        '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ ‚¨áÔ∏è',
        reply_markup=kb.main_menu
    )
    await callback.answer()

@router.callback_query(F.data == 'payment_trigger')
async def payment_trigger(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Payment.waiting_for_check)
    await callback.message.edit_text(
        "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –û—Å—Ç–∞–ª—Å—è –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –æ–± –æ–ø–ª–∞—Ç–µ –≤ —ç—Ç–æ—Ç —á–∞—Ç ‚¨áÔ∏è",
        reply_markup=None
    )
    await callback.answer()

@router.message(Payment.waiting_for_check, F.photo)
async def process_check(message: Message, state: FSMContext, bot: Bot):
    user_data = await state.get_data()
    tariff = user_data.get('tariff_type', 'unknown')
    user_info = f"–æ—Ç @{message.from_user.username} (ID: `{message.from_user.id}`)"
    caption = (
        f"üßæ –ù–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞ {user_info}\n<b>–¢–∞—Ä–∏—Ñ: {tariff.upper()}</b>\n\n"
        "<i><b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω–∞:</b></i>\n"
        "<i>1. –°–æ–∑–¥–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</i>\n"
        "<i>2. –û—Ç–≤–µ—Ç—å –Ω–∞ –≠–¢–û —Å–æ–æ–±—â–µ–Ω–∏–µ —ç—Ç–æ–π —Å—Å—ã–ª–∫–æ–π, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É</i>"
    )
    await bot.send_photo(
        chat_id=ADMIN_ID,
        photo=message.photo[-1].file_id,
        caption=caption,
        reply_markup=kb.admin_decline_keyboard(user_id=message.from_user.id)
    )
    await message.answer(
        "–ë–ª–∞–≥–æ–¥–∞—Ä—é. –í–∞—à —á–µ–∫ –ø–æ–ª—É—á–µ–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç –Ω–µ –±–æ–ª—å—à–µ —á–∞—Å–∞. –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä")
    await state.clear()

@router.callback_query(F.data.startswith('decline_'))
async def decline_payment(callback: CallbackQuery, bot: Bot):
    user_id = int(callback.data.split('_')[1])
    await bot.send_message(
        user_id,
        "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –æ–ø–ª–∞—Ç–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π, –µ—Å–ª–∏ —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞",
        reply_markup=kb.decline_menu
    )
    await callback.message.edit_caption(
        caption=f"{callback.message.caption}\n\n‚ùå <b>–û–ü–õ–ê–¢–ê –û–¢–ö–õ–û–ù–ï–ù–ê</b>",
        reply_markup=None
    )
    await callback.answer("–û–ø–æ–≤–µ—â–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")

# @router.message(F.photo)
# async def get_photo(message: Message):
#     await message.answer(f'ID —Ñ–æ—Ç–æ: {message.photo[-1].file_id}')
#
# @router.message(F.voice)
# async def handle_voice(message: Message):
#     await message.answer(f"üé§ file_id –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:\n`{message.voice.file_id}`")